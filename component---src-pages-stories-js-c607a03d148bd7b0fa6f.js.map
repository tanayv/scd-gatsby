{"version":3,"sources":["webpack:///./src/components/grids/storybook-grid.js","webpack:///./src/content/stories.js","webpack:///./src/pages/stories.js","webpack:///./src/components/banner/image-banner/image-banner.js","webpack:///./src/components/grids/grid-box/image-blob.js","webpack:///./src/components/grids/grid-box/grid-box-slide.js","webpack:///./src/components/grids/grid-box/grid-box.js"],"names":["StorybookGrid","props","_this","_React$Component","call","this","generateGridElement","elementData","index","gridElement","titleIndex","console","log","react_default","a","createElement","className","image_blob","name","images","grayscale","onClick","e","restoreGrid","title","descriptionIndex","description","transformGrid","preventDefault","self","assertThisInitialized_default","newGridContents","Fragment","data","map","i","setState","gridContents","generateDefaultGrid","key","class","mainImage","render","state","React","Component","storybookGridData","href","StoriesPage","Helmet","charSet","layout","image_banner","page","storybook_grid","ImageBanner","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","query","style","backgroundImage","childImageSharp","fluid","src","_public_static_d_1138115207_json__WEBPACK_IMPORTED_MODULE_0__","ImageBlob","gatsby_browser_entry","_1370686295","GridBoxSlide","image","textTitle","paragraphs","GridBox","navigationData","slide","activeTab","tabTitle","activeSlide","grid_box_slide","gridBoxClasses","theme","propTypes","PropTypes","array"],"mappings":"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","file":"component---src-pages-stories-js-c607a03d148bd7b0fa6f.js","sourcesContent":["import React from \"react\";\nimport ImageBlob from \"./../image-blob/image-blob\";\nimport \"./grids.css\";\n\nclass StorybookGrid extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            gridContents: this.generateDefaultGrid(props.data)\n        }\n    }\n\n    generateGridElement = (elementData, index) => {\n        let gridElement;\n        if (index === elementData.titleIndex) {\n            console.log(\"Title Tile\");\n            gridElement = <div className=\"grid-element\">\n                <ImageBlob name={elementData.images[index]} grayscale=\"true\"/>\n                <div className=\"element-contents\">\n                    <div className=\"title-slide\">\n                        <div className=\"close-button\" onClick={(e) => this.restoreGrid(e)}>✕</div>\n                        <h1>{elementData.title}</h1>\n                    </div>\n                </div>\n            </div>\n        }\n        \n        else if (index === elementData.descriptionIndex) {\n            console.log(\"Description Tile\");\n            gridElement = <div className=\"grid-element\">\n                <div className=\"element-contents\">\n                    <p>{elementData.description}</p>\n                </div>\n            </div>\n\n        }\n\n        else {\n            /* Return just an image */\n            console.log(\"Image Tile\");\n            gridElement = <div className=\"grid-element\">\n                <ImageBlob name={elementData.images[index]}/>\n            </div>\n        }\n        return gridElement;\n    }\n\n    transformGrid = (e, gridElement) => {\n        e.preventDefault();\n        console.log(\"Grid being transformed...\");\n        let self = this;\n        let newGridContents = <> {\n            this.props.data.map((data, i) => (\n                self.generateGridElement(gridElement, i)\n            ))\n        } </>;\n        console.log(newGridContents);\n        this.setState({gridContents: newGridContents});\n    }\n\n\n    generateDefaultGrid = (data) => {\n        let self = this;\n        return data.map((elementData, key) => {\n            return (\n                <div className=\"grid-element default\" key={key} onClick={(e) => this.transformGrid(e, elementData)}>\n                    <div class=\"element-contents\">\n                        <h1>{elementData.title}</h1>\n                    </div>\n                    <div className=\"overlay\"/>\n                    <ImageBlob name={elementData.mainImage}/>\n                </div>\n            )\n\n        })\n        \n    }\n\n    restoreGrid = (e) => {\n        e.preventDefault();\n        this.setState({gridContents: this.generateDefaultGrid(this.props.data)})\n    }\n\n    render = () => {\n        \n        return (\n            <div className=\"storybook-grid\">\n                {this.state.gridContents}\n            </div>\n        )\n    }\n\n}\n\nexport default StorybookGrid;","import React from \"react\";\nimport {Link} from \"gatsby\"\n\nconst storybookGridData = [\n    {\n        \"title\": \"QUAD DAY PAR-TAY!\",\n        \"mainImage\": \"stories1b\",\n        \"description\": `Our first interaction with our campus took place on Quad Day!!\n\n        We wanted to do something different to really grab students’ attention, so instead of a typical Quad Day booth we decided to ditch the standard folding table and opt for a hot pink couch in its place. \n        \n        We also started our Slash Student conversation by asking students to tell us what their majors and side-gigs were. Oh, and we had a (root beer) keg. \n        \n        This first interactive experience with students allowed us to start explaining the process of design thinking and what SCD is all about. It was a blast!`,\n        \"titleIndex\": 0,\n        \"descriptionIndex\": 5,\n        \"images\": [\n            \"stories1a\",\n            \"stories1b\",\n            \"stories1c\",\n            \"stories1d\",\n            \"stories1e\",\n            \"stories1e\",\n        ]\n    },\n    {\n        \"title\": \"DORM ROOM IN AN OFFICE\",\n        \"mainImage\": \"stories2a\",\n        \"description\": `As a double alum of the University of Illinois, Rachel Switzky, Director of SCD, wanted to be reminded of what it was like being a freshman on campus. \n\n        In order to gain empathy for our first-year students, Rachel decided to build a dorm in her office! \n        \n        If you haven’t yet read her article about the experience, check it out.`,\n        \"titleIndex\": 1,\n        \"descriptionIndex\": 2,\n        \"images\": [\n            \"stories2a\",\n            \"stories2b\",\n            \"stories2b\",\n            \"stories2b\",\n            \"stories2e\",\n            \"stories2e\",\n        ]\n    },\n    {\n        \"title\": \"POP-UPS\",\n        \"mainImage\": \"stories3c\",\n        \"description\": `During fall semester of 2018 we held three different “Pop-Up Workshops,” which were opportunities for us to teach the design thinking process to students unable to enroll in one of our courses. \n\n        Our first Pop-Up took place one rainy Saturday morning at the Urbana Market at the Square. Though conditions weren’t ideal, all attendees eagerly participated and went home with many new insights. \n        \n        Our second Pop-Up involved interviewing cat owners for an upcoming Cat Hackathon with the College of Veterinary Medicine. Our final Pop-Up was with the Technology Entrepreneur Center (TEC) and was focused on students’ eating habits on campus. We have many more Pop-Up Workshops coming up, so check out our calendar so you don’t miss any!`,\n        \"titleIndex\": 2,\n        \"descriptionIndex\": 3,\n        \"images\": [\n            \"stories3a\",\n            \"stories3b\",\n            \"stories3c\",\n            \"stories3c\",\n            \"stories3e\",\n            \"stories3f\",\n        ]\n    },\n    {\n        \"title\": \"CAT HACKATHON\",\n        \"mainImage\": \"stories4c\",\n        \"description\": `In October, SCD got to be a part of a really cool experience with the College of Veterinary Medicine and the company VetMed2.0. \n\n        This “Cat Hackathon” that Vet Med hosted focused on finding solutions for cats that do their business outside of their litter boxes, an issue which leads to many cats being relinquished to shelters. SCD hosted Pop-Up Workshop sessions where students were able to conduct design research with cat owners. \n        \n        The insights gained from these sessions were then presented at the Hackathon for participants to use. \n        \n        It was a cat-tastic time!`,\n        \"titleIndex\": 3,\n        \"descriptionIndex\": 0,\n        \"images\": [\n            \"stories4b\",\n            \"stories4b\",\n            \"stories4c\",\n            \"stories4d\",\n            \"stories4e\",\n            \"stories4f\",\n        ]\n    },\n    {\n        \"title\": \"HALLOWEEN HOUSE OF HORROR-IBLE FUN!\",\n        \"mainImage\": \"stories2a\",\n        \"description\": \"\",\n        \"titleIndex\": \"\",\n        \"descriptionIndex\": \"\",\n        \"images\": [\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n        ]\n    },\n    {\n        \"title\": \"!! LOVEAPALOOZA !!\",\n        \"mainImage\": \"stories2a\",\n        \"description\": \"\",\n        \"titleIndex\": \"\",\n        \"descriptionIndex\": \"\",\n        \"images\": [\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n        ]\n    }\n];\n\nexport {\n    storybookGridData\n}","import React from \"react\"\nimport { Helmet } from \"react-helmet\";\nimport Layout from \"../components/layout\";\nimport ImageBanner from \"../components/banner/image-banner/image-banner\";\nimport GridBox from \"../components/grids/grid-box/grid-box\";\nimport StorybookGrid from \"../components/grids/storybook-grid\";\n\n\n/** Content */\nimport { storybookGridData } from \"./../content/stories\";\n\n\nconst StoriesPage = () => (\n    <>\n    <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>SCD story time!</title>\n    </Helmet>\n    <Layout>\n        <ImageBanner page=\"stories\" title=\"stories past, present, and future!\"/>\n        <div className=\"scd-cw-75\">\n            <h2 className=\"serif\">As designers, we are storytellers.</h2>\n            <h3 className=\"serif\">{`Here at SCD, we have a LOT going on! From courses to coffee hours and everything in between, we have many stories to share about our experiences on campus. We thought that, rather than keep our adventures to ourselves, we should have a space where we can share them. Feel free to look around and explore our past, present, and future!\n            `}</h3>\n            <StorybookGrid data={storybookGridData}/>\n        </div>\n    </Layout>\n    </>\n)\n\n\nconst gridBoxSlides = [\n  {\n    \"tabTitle\": \"#SlashStudent\",\n    \"textTitle\": \"#SlashStudent\",\n    \"paragraphs\": <p className=\"serif\">At SCD, we believe it is important to foster multidisciplinary collaborations. We also understand that our students themselves are multidisciplinary, and are often involved in many things outside of their studies. We wanted to showcase our students in a way that hasn’t been done before; thus, the Slash Student project was born! Slash Student gives us a place to highlight all the things that make students unique and allow them to excel in many ways. Check out our Slash Student album here, and the article written about the project by Darrien Rose on our Medium page. If you or someone you know would like to be highlighted as a Slash Student, please email us and let us know.\n    </p>,\n    \"image\": \"slash_student\"\n  }, \n  {\n    \"tabTitle\": \"Social Innovation Spotlight\",\n    \"textTitle\": \"Social Innovation Spotlight\",\n    \"paragraphs\": <><p className=\"serif\">One of our main initiatives at SCD is to broaden the definition of innovation to include innovations within the social sphere. There are so many inspiring individuals and groups affiliated with our university that are creating change with their innovative ideas. We thought highlighting some of these people would be a great way to inspire others to dive deeper into social innovation, so we created the Social Innovation Spotlight. We share a different individual or group’s story each week on our social media pages as well as on our <a href=\"/stories\">Social Innovation Spotlight page</a>. Make sure you check it out!</p><p className=\"serif\">If you or someone you know is working on a socially innovative project that you think should be spotlighted, please email us.</p></>,\n    \"image\": \"hq_coming_soon\"\n  },\n  {\n    \"tabTitle\": \"Coffee Hours!\",\n    \"textTitle\": \"Coffee Hours!\",\n    \"paragraphs\": <p className=\"serif\">AMA= \"Ask Me Anything,\" and that's what Rachel, Director of the Siebel Center for Design, wants you to do! Are you still unsure what the Siebel Center for Design does? Do you want to learn more about Design Thinking? Do you think Rachel is an AWESOME Boss Lady and want to have coffee with her? Come out to one of her AMA Coffee Hours! These coffee hours happen every month, so check out our calendar to see when the next one is.</p>,\n    \"image\": \"coffee_hours\"\n  },\n  ]\n  \n\nexport default StoriesPage\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport \"./image-banner.css\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst ImageBanner = (props) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        resources: file(relativePath: { eq: \"resources.jpg\" }) {\n          childImageSharp {\n            fluid(maxHeight: 1200) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        connect: file(relativePath: { eq: \"connect.png\" }) {\n          childImageSharp {\n            fluid(maxHeight: 1200) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        stories: file(relativePath: { eq: \"stories/banner.jpg\" }) {\n          childImageSharp {\n            fluid(maxHeight: 1200) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        courses: file(relativePath: { eq: \"courses/banner.jpg\" }) {\n          childImageSharp {\n            fluid(maxHeight: 1200) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    `}\n    render={data =>\n    <>\n    <div className=\"image-banner\" style={\n      {\n        backgroundImage: `url(${data[props.page].childImageSharp.fluid.src})`\n      }\n    }>\n      <div className=\"text-line\">{props.title}</div>\n    </div>\n    </>\n}\n  />\n)\nexport default ImageBanner\n","import React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport \"./grid-box.css\"\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nconst ImageBlob = (props) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        ideo: file(relativePath: { eq: \"ideo.jpg\" }) {\n          childImageSharp {\n            fluid(maxHeight: 1200) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n\n        hq_coming_soon: file(relativePath: { eq: \"hq_coming_soon.jpg\" }) {\n          childImageSharp {\n            fluid(maxHeight: 1200) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n\n        slash_student: file(relativePath: { eq: \"slash_student.jpeg\" }) {\n          childImageSharp {\n            fluid(maxHeight: 1200) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n\n        coffee_hours: file(relativePath: { eq: \"coffee_hours.png\" }) {\n          childImageSharp {\n            fluid(maxHeight: 1200) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n\n      }\n    `}\n    render={data =>\n    <>\n    <div className=\"image-blob\" style={\n      {\n        backgroundImage: `url(${data[props.name].childImageSharp.fluid.src})`\n      }\n    }>\n    </div>\n    </>\n}\n  />\n)\nexport default ImageBlob\n","import React from \"react\"\nimport \"./grid-box.css\"\nimport ImageBlob from \"./image-blob\";\n\nclass GridBoxSlide extends React.Component {\n    \n    render = () => (\n        <div className=\"grid-box-default-slide\">\n            <div className=\"image-tile resources\">\n                <ImageBlob name={this.props.image}/>\n            </div>\n            <div className=\"text-container\">\n                <h1>{this.props.textTitle}</h1>\n                <hr/>\n                {this.props.paragraphs}\n            </div>\n        </div>\n    )\n\n}\n\nexport default GridBoxSlide\n","import React from \"react\"\nimport \"./grid-box.css\"\nimport GridBoxSlide from \"./grid-box-slide\";\nimport PropTypes from \"prop-types\"\n\nclass GridBox extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeTab: 0\n        };\n\n    }\n    \n    render = () => {\n        let navigationData = this.props.data ? \n            (\n                this.props.data.map((slide, key) => (\n                    this.state.activeTab === key ?\n                    <div className=\"tab selected\" key={key} onClick={() => {\n                        this.setState({activeTab: key})\n                    }}>{slide.tabTitle}</div>\n                    : <div className=\"tab\" key={key} onClick={() => {\n                        this.setState({activeTab: key})\n                    }}>{slide.tabTitle}</div>\n                ))\n            ) : null;\n\n        let activeSlide = this.props.data ?\n            (\n                <GridBoxSlide \n                    tabTitle={this.props.data[this.state.activeTab].tabTitle}\n                    textTitle={this.props.data[this.state.activeTab].textTitle}\n                    paragraphs={this.props.data[this.state.activeTab].paragraphs}\n                    image={this.props.data[this.state.activeTab].image}\n                />\n            ) : null;\n        let gridBoxClasses = \"grid-box grid-box-theme-\" + this.props.theme;\n        return (\n        <div className={gridBoxClasses}>\n            <div className=\"scd-cw-75\">\n                <div className=\"navigation\">\n                    {navigationData}\n                </div>\n                {activeSlide}\n            </div>\n        </div>)\n    }\n\n}\n\nGridBox.propTypes = {\n    data: PropTypes.array\n  }\n\nexport default GridBox"],"sourceRoot":""}